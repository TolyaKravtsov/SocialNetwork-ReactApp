{"version":3,"sources":["redux/reducer/dialogsPageReducer.js","api/api.js","common/Rolling-2s-200px.svg","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","redux/reducer/findUsersPageReducer.js","components/Users/Paginator.js","components/Users/FindUsers.js","redux/reducer/users-selectors.js","components/Users/findUsersContainer.jsx","components/Header/Header.jsx","redux/reducer/authReducer.js","components/Header/HeaderContainer.js","login/loginForm.jsx","login/login.jsx","redux/reducer/app-reducer.js","redux/ReduxStore.js","hoc/lazyHoc.js","App.js","index.js","common/validators.js","common/formsControl/TextareaForm.module.css","common/preloader.js","common/formsControl/TextareaForm.js","components/Users/findUsers.module.css","components/Header/Header.module.css","redux/reducer/profilePageReducer.js"],"names":["initialState","dialogsData","id","name","messageData","message","newMessageText","addMessageAC","newMessageBody","type","dialogsPageReducer","state","action","instance","axios","withCredentials","baseURL","headers","profileAPI","getProfile","userId","get","getStatus","updateStatus","status","put","usersAPI","getUsers","currentPage","pageSize","then","response","data","follow","post","unfollow","delete","authAPI","me","loginUser","email","password","rememberMe","logoutUser","module","exports","Boolean","window","location","hostname","match","Navbar","props","className","navbar","nav","item","to","activeClassName","activeLink","href","users","newPostText","totalUsersCount","inProgress","maxPage","followingInProgress","followSuccess","userID","unfollowSuccess","setCurrentPage","preloaderTurned","followingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","findUsersPageReducer","map","followed","count","Paginator","portionSize","pagesCount","Math","ceil","pages","i","push","findUsers","selectedPage","onClick","onPageChanged","Users","key","img","src","photos","small","alt","createSelector","findUsersPage","filter","getPageSizeSelector","getTotalUsersCount","getCurrentPage","getInProgress","getFollowingInProgress","usersContainer","pageNumber","getUsersThunkCreator","this","React","Component","compose","connect","bind","items","totalCount","Header","header","loginBlock","isAuth","login","setAuthUserData","getAuthUserData","authReducer","HeaderContainer","auth","MaxLength15","maxLengthCreator","LoginForm","handleSubmit","error","onSubmit","Field","placeholder","component","Input","validate","requiredField","TextareaForm","summaryError","errorMessage","messages","stopSubmit","_error","LoginReduxForm","reduxForm","form","formData","initialized","appReducer","AllReducers","combineReducers","profilePage","profilePageReducer","dialogsPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","lazyHoc","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","Connect","withRouter","promiseResult","Promise","all","AppContainer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","value","maxLength","length","PreloaderComponent","preloader","FormControl","input","meta","hasError","touched","textareaModule","textareaForm","children","Textarea","RestProps","postData","profile","addPostAC","setStatus","getUserProfile","posts","p","postId"],"mappings":"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","file":"static/js/main.3b2fb3c3.chunk.js","sourcesContent":["const UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\r\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: \"Tolya\"},\r\n        {id: 2, name: \"Andrey\"},\r\n        {id: 3, name: \"Igor\"},\r\n        {id: 4, name: \"Petya\"}\r\n    ],\r\n    messageData: [\r\n        {id: 1, message: \"oy\"},\r\n        {id: 2, message: \"Hi\"},\r\n        {id: 3, message: \"I Tolya\"},\r\n        {id: 4, message: \"How are you\"}\r\n    ],\r\n    newMessageText: \"\"\r\n};\r\nconst dialogsPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                newMessageText: \"\",\r\n                messageData: [\r\n                    ...state.messageData,\r\n                    {id: 10, message: action.newMessageBody}\r\n                ]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//      AC- actionCreator\r\nexport const   addMessageAC = (newMessageBody) => ({type: ADD_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsPageReducer;\r\n","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"74142593-85f3-4118-ba9b-fbc0ec9964dd\"\r\n    }\r\n\r\n});\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    },\r\n\r\n\r\n};\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(\r\n            `users?page=${currentPage}&count=${pageSize}`,\r\n        )\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return (instance.post(\r\n                `follow/${userId}`,\r\n            )\r\n        )\r\n\r\n    },\r\n    unfollow(userId) {\r\n        return (\r\n            instance.delete(\r\n                `follow/${userId}`,\r\n            )\r\n        )\r\n    },\r\n    getProfile(userId) {\r\n\r\n        return profileAPI.getProfile(userId);\r\n    },\r\n};  \r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    loginUser(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logoutUser(email, password, rememberMe = false) {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n\r\n\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/Rolling-2s-200px.fe5a47a9.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Dooi\",\"item\":\"Navbar_item__1wlCd\",\"activeLink\":\"Navbar_activeLink__rz0vI\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport navbar from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={navbar.nav}>\r\n            <div className={navbar.item}>\r\n                <NavLink to=\"/profile\" activeClassName={navbar.activeLink}>Profile</NavLink>\r\n            </div>\r\n\r\n            <div className={navbar.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={navbar.activeLink}>Dialogs</NavLink>\r\n            </div>\r\n\r\n            <div className={navbar.item}>\r\n                <a href=\"\">News</a>\r\n            </div>\r\n\r\n            <div className={navbar.item}>\r\n                <a href=\"\">Music</a>\r\n            </div>\r\n\r\n            <div className={navbar.item}>\r\n                <a href=\"\">Settings</a>\r\n            </div>\r\n\r\n\r\n            <div className={navbar.item}>\r\n                <h2>\r\n                    <NavLink to=\"/users\" activeClassName={navbar.activeLink}> Find Users</NavLink>\r\n\r\n                </h2>\r\n            </div>\r\n\r\n        </nav>\r\n\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default Navbar;","import {usersAPI} from \"../../api/api\";\r\n\r\nconst FOLLOW = ' FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst PRELOADER_TURNED = 'PRELOADER_TURNED';\r\nconst FOLLOWING_PROGRESS = 'FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    newPostText: '',\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    totalUsersCount: 0,\r\n    inProgress: false,\r\n    maxPage: 0,\r\n    followingInProgress: false,\r\n};\r\n\r\nconst findUsersPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(users => {\r\n                    if (users.id === action.userID) {\r\n                        return {...users, followed: true}\r\n                    }\r\n                    return users;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(users => {\r\n                    if (users.id === action.userID) {\r\n                        return {...users, followed: false}\r\n                    }\r\n                    return users;\r\n                })\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n            //склеиваем 2 массива:те,которые были в state и которые пришли в action\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case PRELOADER_TURNED: {\r\n            return {...state, inProgress: action.inProgress}\r\n        }\r\n        case FOLLOWING_PROGRESS: {\r\n            return {...state, followingInProgress: action.followingInProgress}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//      AC- actionCreator\r\nexport const followSuccess = (userID) => ({type: FOLLOW, userID});\r\nexport const unfollowSuccess = (userID) => ({type: UNFOLLOW, userID});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage: currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const preloaderTurned = (inProgress) => ({type: PRELOADER_TURNED, inProgress: inProgress});\r\nexport const followingInProgress = (followingProgress) => ({type: FOLLOWING_PROGRESS, inProgress: followingProgress});\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(preloaderTurned(true),\r\n            dispatch(setCurrentPage(currentPage)),\r\n        );\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n        dispatch(preloaderTurned(false));\r\n    };\r\n\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    };\r\n\r\n};\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    };\r\n\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(followingInProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n        dispatch(followingInProgress(false, userId));\r\n    }\r\n};\r\n\r\n\r\nexport default findUsersPageReducer;","import React from \"react\";\r\nimport findUsers from \"./findUsers.module.css\";\r\n\r\nlet Paginator = ({portionSize, ...props}) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= 20; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n\r\n    return (\r\n        <div>\r\n            {pages.map(pages => {\r\n                return (\r\n                    <span\r\n                        className={props.currentPage === pages && findUsers.selectedPage}\r\n                        onClick={() => {\r\n                            props.onPageChanged(pages);\r\n                        }}\r\n                    >\r\n            {pages}\r\n          </span>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport findUsers from \"./findUsers.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"./Paginator\";\r\n\r\nlet Users = ({currentPage,onPageChanged,totalUsersCount,pageSize, ...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                       totalUsersCount={totalUsersCount} pageSize={pageSize}/>\r\n            {props.users.map(users => (\r\n                <div key={users.id}>\r\n          <span>\r\n            <div>\r\n              <NavLink to={\"/profile/\" + users.id}>\r\n                <img\r\n                    className={findUsers.img}\r\n                    src={\r\n                        users.photos.small != null\r\n                            ? users.photos.small\r\n                            : \"https://cutt.ly/denvfka\"\r\n                    }\r\n                    alt=\"photo\"\r\n                />\r\n              </NavLink>\r\n            </div>\r\n            <div>\r\n              {users.followed\r\n                  ? (<button onClick={() => {\r\n                      props.unfollow(users.id);\r\n                  }}>\r\n                      Unfollow</button>)\r\n                  : (<button onClick={() => {\r\n                          props.follow(users.id);\r\n                      }}>Follow\r\n                      </button>\r\n                  )}\r\n            </div>\r\n          </span>\r\n                    <span>\r\n            <span>\r\n              <div>{users.name}</div>\r\n              <div>{users.id}</div>\r\n            </span>\r\n            <span>\r\n              <div>{\"\"}</div>\r\n              <div>{\"\"}</div>\r\n            </span>\r\n          </span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.findUsersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(users => true);\r\n});\r\n\r\n\r\nexport const getPageSizeSelector = (state) => {\r\n    return state.findUsersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.findUsersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.findUsersPage.currentPage\r\n};\r\n\r\nexport const getInProgress = (state) => {\r\n    return state.findUsersPage.inProgress;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.findUsersPage.followingInProgress;\r\n};","import React from \"react\";\r\nimport {\r\n    follow,\r\n    followingInProgress,\r\n    getUsersThunkCreator,\r\n    preloaderTurned,\r\n    setCurrentPage,\r\n    unfollow\r\n} from \"../../redux/reducer/findUsersPageReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./FindUsers\";\r\nimport PreloaderComponent from \"../../common/preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getInProgress,\r\n    getPageSizeSelector,\r\n    getTotalUsersCount, getUsers,\r\n    getUsersSelector\r\n} from \"../../redux/reducer/users-selectors\";\r\n\r\nclass usersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsersThunkCreator(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsersThunkCreator(pageNumber, pageSize);\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.inProgress ? <PreloaderComponent/> : null}\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    users={this.props.users}\r\n                    onPageChanged={this.onPageChanged}\r\n                    unfollow={this.props.unfollow}\r\n                    follow={this.props.follow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        inProgress: getInProgress(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        {follow, unfollow, setCurrentPage, preloaderTurned, followingInProgress, getUsersThunkCreator,})\r\n)(usersContainer)","import React from 'react';\r\nimport header from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={header.header}>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6a/JavaScript-logo.png\" alt=\"JavaScript\"/>\r\n            Header\r\n            <div className={header.loginBlock}>\r\n\r\n               {\r\n                   props.isAuth\r\n                   ? <div>{props.login} <button onClick={props.logoutUser}>Logout</button></div>\r\n                   : <NavLink to={'/login'}><button>Login</button></NavLink>\r\n               }\r\n            </div>\r\n        </header>\r\n    );\r\n\r\n};\r\n\r\nexport default Header;\r\n","import {authAPI} from \"../../api/api\";\r\nimport actions from \"redux-form/lib/actions\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = '/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    inProgress: false,\r\n    isAuth: false,\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//      AC- actionCreator\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    data: {userId, email, login, isAuth}\r\n});\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, login, email, true));\r\n    }\r\n};\r\n\r\nexport const loginUser = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.loginUser(email, password, rememberMe)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let errorMessage = response.data.messages;\r\n        let error = stopSubmit(\"login\", {_error: errorMessage});\r\n        dispatch(error);\r\n    }\r\n};\r\nexport const logoutUser = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.logoutUser(email, password, rememberMe)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutUser} from \"../../redux/reducer/authReducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {logoutUser})(HeaderContainer);\r\n","import React from \"react\";\r\nimport {Field} from \"redux-form\";\r\nimport {Input} from \"../common/formsControl/TextareaForm\";\r\nimport {maxLengthCreator, requiredField} from \"../common/validators\";\r\nimport TextareaForm from \"../common/formsControl/TextareaForm.module.css\"\r\n\r\nconst MaxLength15 = maxLengthCreator(15);\r\n\r\nconst LoginForm = ({handleSubmit,error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[requiredField, MaxLength15]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} component={Input}\r\n                       validate={[requiredField, MaxLength15]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input}\r\n                       validate={[requiredField, MaxLength15]}/> remember me\r\n            </div>\r\n            {error && <div className={TextareaForm.summaryError}>{error}</div>}\r\n            <div>\r\n                <button>Sign Up</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport LoginForm from \"./loginForm\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginUser} from \"../redux/reducer/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n\r\n    const LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n    const onSubmit = (formData) => {\r\n        props.loginUser(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport default connect(mapStateToProps, {loginUser})(Login);","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = ' INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//      AC- actionCreator\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promiseResult = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promiseResult]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n\r\n};\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profilePageReducer from \"./reducer/profilePageReducer\";\r\nimport dialogsPageReducer from \"./reducer/dialogsPageReducer\";\r\nimport findUsersPageReducer from \"./reducer/findUsersPageReducer\";\r\nimport authReducer from \"./reducer/authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./reducer/app-reducer\";\r\n\r\nlet AllReducers = combineReducers({\r\n    auth: authReducer,\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    findUsersPage: findUsersPageReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n// Расширения Redux для Chrome\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(AllReducers,composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\n/*let store = createStore(AllReducers, applyMiddleware(thunkMiddleware));*/\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React, {Suspense} from \"react\";\r\n\r\nexport const lazyHoc = (Component) => {                //HOC\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Loading...</div>}>\r\n            <Component{...props}/>\r\n        </Suspense>\r\n    }\r\n\r\n};","import React, {Component, Suspense} from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport FindUsersContainer from \"./components/Users/findUsersContainer.jsx\";\n/*import ProfileContainer from \"./components/Profile/profileContainer\";*/\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./login/login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {BrowserRouter as Router, Route, withRouter} from \"react-router-dom\";\nimport {initializeApp} from \"./redux/reducer/app-reducer\";\nimport PreloaderComponent from \"./common/preloader\";\nimport store from \"./redux/ReduxStore\";\nimport {lazyHoc} from \"./hoc/lazyHoc\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/profileContainer'));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <PreloaderComponent/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path=\"/dialogs\"\n                           render={lazyHoc(DialogsContainer)}/>\n\n                    <Route path=\"/profile/:userId?\"\n                           render={lazyHoc(ProfileContainer)}/>\n\n                    <Route path=\"/users\"\n                           render={() => <FindUsersContainer/>}/>\n\n                    <Route path=\"/login\"\n                           render={() => <Login/>}/>\n\n\n                </div>\n            </div>\n        );\n\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\n\nlet Connect = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\n\nlet AppContainer = (props) => {\n    return <Router>\n        <Provider store={store}>\n            <Connect/>\n        </Provider>\n    </Router>\n};\n\n\nexport default AppContainer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppContainer from \"./App\";\n\n\nReactDOM.render(\n    <AppContainer/>,\ndocument.getElementById('root')\n);\n\nserviceWorker.unregister();","export const requiredField = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is  required\"\r\n};\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > 30) return `Maxlength is ${maxLength}symbols `;\r\n    return undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaForm\":\"TextareaForm_textareaForm__2mPvo\",\"error\":\"TextareaForm_error__1wAXh\",\"summaryError\":\"TextareaForm_summaryError__2v9lw\"};","import React from \"react\";\r\nimport preloader from \"./Rolling-2s-200px.svg\"\r\n\r\nlet PreloaderComponent = (props) => {\r\n    return (\r\n        <div>\r\n        <img src={preloader} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PreloaderComponent;\r\n","import React from \"react\";\r\nimport textareaModule from \"./TextareaForm.module.css\"\r\n\r\nexport const FormControl = ({input, meta, ...props}) => {              //get props withOut input and meta\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={textareaModule.textareaForm + \" \" + (hasError ? textareaModule.error : \"\")}>\r\n            {props.children}\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n   const {input, meta, ...RestProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...RestProps}/></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...RestProps} = props;\r\n    return <FormControl {...props}><input {...input} {...RestProps}/></FormControl>\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"findUsers_img__24xCS\",\"selectedPage\":\"findUsers_selectedPage__12ZlO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1ifLo\",\"loginBlock\":\"Header_loginBlock__3TFF8\"};","import {profileAPI, usersAPI} from \"../../api/api\";\r\n\r\nconst ADD_POST = ' ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {id: 1, message: 'how are you'},\r\n        {id: 2, message: 'how do you do'},\r\n        {id: 3, message: 'Люблю Сашеньку'}\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nconst profilePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            debugger;\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, {id: 5, message: action.newMessageBody}]\r\n            };\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.post.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n//      AC- actionCreator\r\nexport const addPostAC = (newMessageBody) => ({type: ADD_POST, newMessageBody});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport default profilePageReducer;"],"sourceRoot":""}